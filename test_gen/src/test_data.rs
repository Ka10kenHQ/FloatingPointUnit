pub fn normal_numbers() -> Vec<(f32, f64)> {
    vec![
        (69.0_f32, 69.0_f64),
        (3.14_f32, 3.14_f64),
        (1.0_f32, 1.0_f64),
        (2.718_f32, 2.718_f64),
        (1.5_f32, 1.5_f64),
        (12345.6789_f32, 12345.6789_f64),
        (1000000.0_f32, 1000000.0_f64),
        (42.0_f32, 42.0_f64),
        (123456.789_f32, 123456.789_f64),
        (987654321.0_f32, 987654321.0_f64),
        (1000000000.0_f32, 1000000000.0_f64),
        (1_000_000.0_f32, 1_000_000.0_f64),
        (100.01_f32, 100.01_f64),
        (123.45_f32, 123.45_f64),
        (54321.0_f32, 54321.0_f64),
        (2.0_f32, 2.0_f64),
        (1000000000.0_f32, 1000000000.0_f64),
        (1.123456_f32, 1.123456_f64),
        (111.0_f32, 111.0_f64),
        (987.0_f32, 987.0_f64),
        (3.1415926535_f32, 3.1415926535_f64),
        (1.414213562_f32, 1.414213562_f64),
        (2.2360679775_f32, 2.2360679775_f64),
        (10.0_f32, 10.0_f64),
        (5.0_f32, 5.0_f64),
        (7.89_f32, 7.89_f64),
        (4.56_f32, 4.56_f64),
        (9.99_f32, 9.99_f64),
        (11.11_f32, 11.11_f64),
        (1.0_f32, 1.0_f64),
        (1234567.0_f32, 1234567.0_f64),
        (222.0_f32, 222.0_f64),
        (123.0000001_f32, 123.0000001_f64),
        (9.81_f32, 9.81_f64),
        (144.0_f32, 144.0_f64),
        (0.001_f32, 0.001_f64),
        (9.876_f32, 9.876_f64),
        (1000.0_f32, 1000.0_f64),
        (250.0_f32, 250.0_f64),
        (500.0_f32, 500.0_f64),
        (50.0_f32, 50.0_f64),
        (7.0_f32, 7.0_f64),
        (3.5_f32, 3.5_f64),
        (15.0_f32, 15.0_f64),
        (99.0_f32, 99.0_f64),
        (22.0_f32, 22.0_f64),
        (1.75_f32, 1.75_f64),
        (12.0_f32, 12.0_f64),
        (30.0_f32, 30.0_f64),
        (11.0_f32, 11.0_f64),
        (77.0_f32, 77.0_f64),
        (9999.0_f32, 9999.0_f64),
        (105.0_f32, 105.0_f64),
        (11.5_f32, 11.5_f64),
        (6.25_f32, 6.25_f64),
        (1.6_f32, 1.6_f64),
        (1.25_f32, 1.25_f64),
        (5.5_f32, 5.5_f64),
        (7.5_f32, 7.5_f64),
        (99.99_f32, 99.99_f64),
        (1234.5_f32, 1234.5_f64),
        (333.3_f32, 333.3_f64),
        (4567.8_f32, 4567.8_f64),
        (8.9_f32, 8.9_f64),
    ]
}

pub fn zero() -> Vec<(f32, f64)> {
    vec![(0.0_f32, 0.0_f64)]
}

pub fn infinity() -> Vec<(f32, f64)> {
    vec![
        (f32::INFINITY, f64::INFINITY),
        (-f32::INFINITY, -f64::INFINITY),
    ]
}

pub fn denormal_numbers() -> Vec<(f32, f64)> {
    vec![
        (
            f32::from_bits(0x00000001),
            f64::from_bits(0x0000000000000001),
        ),
        (
            f32::from_bits(0x00000002),
            f64::from_bits(0x0000000000000002),
        ),
        (
            f32::from_bits(0x00000010),
            f64::from_bits(0x0000000000000010),
        ),
        (
            f32::from_bits(0x00000100),
            f64::from_bits(0x0000000000000100),
        ),
        (
            f32::from_bits(0x00001000),
            f64::from_bits(0x0000000000001000),
        ),
        (
            f32::from_bits(0x00010000),
            f64::from_bits(0x0000000000010000),
        ),
        (
            f32::from_bits(0x000FFFFF),
            f64::from_bits(0x000FFFFFFFFFFFFF),
        ),
        (
            f32::from_bits(0x007FFFFF),
            f64::from_bits(0x000FFFFFFFFFFFFF),
        ),
    ]
}

pub fn min_max_values() -> Vec<(f32, f64)> {
    vec![
        (f32::MAX, f64::MAX),
        (-f32::MAX, -f64::MAX),
        (f32::MIN, f64::MIN),
        (-f32::MIN, -f64::MIN),
    ]
}
